@using PagedList;
@using PagedList.Mvc;
@model ArticleOnline.Models.ArticleManagementModel
@using ArticleOnline.Helpers
@using ArticleOnline.Controllers

@{
    ViewBag.Title = "Quản lý người dùng";
    ViewBag.ActionCurrent = "Index";
    ViewBag.ControllerCurrent = "User";
    //var pager = Html.PagedListPager(Model.PagedArticles, page => Url.Action("Index", new { page, currentFilter = ViewBag.CurrentFilter }), PagedListRenderOptions.ClassicPlusFirstAndLast);
    var pager = Model.PagedUsers;
    int totalPages = (int)Math.Ceiling((double)pager.TotalItemCount / pager.PageSize);
    int maxVisiblePages = 5; // Maximum number of visible page links

    int startPage = Math.Max(1, pager.PageNumber - maxVisiblePages / 2);
    int endPage = Math.Min(startPage + maxVisiblePages - 1, totalPages);

    if (endPage - startPage + 1 < maxVisiblePages)
    {
        startPage = Math.Max(1, endPage - maxVisiblePages + 1);
    }
}

<div class="main-content">
    <div class="row">
        <div class="col-md-12">
            <div class="table-wrapper">
                <div class="table-title">
                    <div class="row">
                        <div class="col-sm-6 p-0 flex justify-content-lg-start justify-content-center">
                            <h2 class="ml-lg-2">Quản lý người dùng</h2>
                        </div>
                        <div class="col-sm-6 p-0 flex justify-content-lg-end justify-content-center">
                            <a href="#addUserModal" class="btn btn-success" data-toggle="modal">
                                <i class="material-icons">&#xE147;</i>
                                <span>Thêm</span>
                            </a>
                        </div>
                    </div>
                </div>
                <table class="table table-striped table-hover">
                    <thead>
                        <tr>
                            <th class="text-center">
                                @Html.DisplayNameFor(model => model.User.Avatar)
                            </th>
                            <th class="text-center">
                                @Html.DisplayNameFor(model => model.User.Email)
                            </th>
                            <th class="text-center">
                                @Html.DisplayNameFor(model => model.User.DisplayName)
                            </th>
                            <th class="text-center">
                                @Html.DisplayNameFor(model => model.User.JoinDate)
                            </th>
                            <th class="text-center">
                                @Html.DisplayNameFor(model => model.User.Role)
                            </th>
                        </tr>
                    </thead>

                    <tbody>
                        @foreach (var pagedUser in Model.PagedUsers)
                        {
                            foreach (var user in pagedUser.ListUser)
                            {
                                <tr>
                                    <td class="text-center">
                                        <img src="@Url.Content(user.Avatar)" alt="Avatar" style="width: 120px; height: 110px;">
                                    </td>
                                    <td class="text-center">
                                        @Html.DisplayFor(modelItem => user.Email)
                                    </td>
                                    <td class="text-center">
                                        @Html.DisplayFor(modelItem => user.DisplayName)
                                    </td>
                                    <td class="text-center">
                                        @TimeHelper.FormatTimeAgo(user.JoinDate)
                                    </td>
                                    <td class="text-center">
                                        @Html.DisplayFor(modelItem => user.Role)
                                    </td>
                                    <td class="text-center">
                                        <div class="d-flex justify-content-center align-items-center">
                                            <div class="mr-2">
                                                <a href="#updateUserModal" class="edit" data-toggle="modal" data-id="@user.Id" data-email="@user.Email" data-displayname="@user.DisplayName" data-avatar="@user.Avatar" data-joindate="@user.JoinDate" data-role="@user.Role">
                                                    <i class="material-icons" data-toggle="tooltip" title="Sửa">&#xE254;</i>
                                                </a>
                                            </div>
                                            <div>
                                                <a href="#deleteUserModal" class="delete" data-toggle="modal" data-id="@user.Id">
                                                    <i class="material-icons" data-toggle="tooltip" title="Xóa">&#xE872;</i>
                                                </a>
                                            </div>
                                        </div>
                                    </td>
                                </tr>
                            }
                        }

                    </tbody>
                </table>

                <div class="clearfix">
                    <div class="hint-text">Hiển thị <b>@Model.PagedUsers.Count</b> trong số <b>@Model.ListUser.Count</b></div>
                    <ul class="pagination">
                        @if (pager.HasPreviousPage)
                        {
                            <li class="page-item">
                                <a href="@Url.Action("Index", new { page = 1, currentFilter = ViewBag.CurrentFilter })" class="page-link">Đầu</a>
                            </li>
                            <li class="page-item">
                                <a href="@Url.Action("Index", new { page = pager.PageNumber - 1, currentFilter = ViewBag.CurrentFilter })" class="page-link">Trước</a>
                            </li>
                        }

                        @for (int pageNumber = startPage; pageNumber <= endPage; pageNumber++)
                        {
                            <li class="page-item @(pager.PageNumber == pageNumber ? "active" : "")">
                                <a href="@Url.Action("Index", new { page = pageNumber, currentFilter = ViewBag.CurrentFilter })" class="page-link">@pageNumber</a>
                            </li>
                        }

                        @if (pager.HasNextPage)
                        {
                            <li class="page-item">
                                <a href="@Url.Action("Index", new { page = pager.PageNumber + 1, currentFilter = ViewBag.CurrentFilter })" class="page-link">Tiếp</a>
                            </li>
                            <li class="page-item">
                                <a href="@Url.Action("Index", new { page = totalPages, currentFilter = ViewBag.CurrentFilter })" class="page-link">Cuối</a>
                            </li>
                        }
                    </ul>
                </div>

                @using (Html.BeginForm("Create", "User", FormMethod.Post, new { enctype = "multipart/form-data" }))
                {
                    @Html.AntiForgeryToken()
                    <div class="modal fade" tabindex="-1" id="addUserModal" role="dialog">
                        <div class="modal-dialog" role="document">
                            <div class="modal-content">
                                <div class="modal-header">
                                    <h5 class="modal-title">Thêm người dùng</h5>
                                    <button type="button" class="close" data-dismiss="modal" aria-label="Close">
                                        <span aria-hidden="true">&times;</span>
                                    </button>
                                </div>
                                @Html.ValidationSummary(true, "", new { @class = "text-danger" })
                                <div class="modal-body">

                                    <div class="form-group d-lg-block d-md-inline d-sm-inline">
                                        <label class="d-flex">Ảnh đại diện</label>
                                        <div class="col-md-5">
                                            <input type="file" id="ImageUpLoad" class="mb-sm-3" name="ImageUpLoad" required />
                                        </div>
                                    </div>

                                    <div class="form-group">
                                        @Html.LabelFor(model => model.User.Role)
                                        <div class="col-md-5">
                                            @Html.DropDownListFor(model => model.User.Role, new SelectList(new[]
                                            {
                                                new { Value = "admin", Text = "Quản trị viên" },
                                                new { Value = "user", Text = "Người dùng" }
                                            }, "Value", "Text"), "-- Quyền --", new { @class = "form-control", required = "required", id = "roleDropdown" })
                                        </div>
                                    </div>

                                    <div class="form-group">
                                        @Html.LabelFor(model => model.User.Email)
                                        <div class="col-md-12">
                                            @Html.TextAreaFor(model => model.User.Email, new { @class = "form-control", required = "required" })
                                        </div>
                                    </div>
                                    <div class="form-group">
                                        @Html.LabelFor(model => model.User.DisplayName)
                                        <div class="col-md-12">
                                            @Html.TextAreaFor(model => model.User.DisplayName, new { @class = "form-control", required = "required" })
                                        </div>
                                    </div>

                                    <div class="modal-footer">
                                        <button type="button" class="btn btn-secondary" data-dismiss="modal">Hủy bỏ</button>
                                        <input type="submit" value="Thêm" class="btn btn-success">
                                    </div>
                                </div>
                            </div>
                        </div>
                    </div>
                }

                @using (Html.BeginForm("Edit", "User", FormMethod.Post, new { enctype = "multipart/form-data" }))
                {
                    @Html.AntiForgeryToken()
                    <div class="modal fade" tabindex="-1" id="updateUserModal" role="dialog">
                        <div class="modal-dialog" role="document">
                            <div class="modal-content">
                                <div class="modal-header">
                                    <h5 class="modal-title">Sửa người dùng</h5>
                                    <button type="button" class="close" data-dismiss="modal" aria-label="Close">
                                        <span aria-hidden="true">&times;</span>
                                    </button>
                                </div>
                                @Html.ValidationSummary(true, "", new { @class = "text-danger" })
                                @Html.HiddenFor(model => model.User.Id)
                                @Html.HiddenFor(model => model.User.Avatar)

                                <div class="modal-body">
                                    <div class="form-group" style="display:inline-block;">
                                        <label class="d-flex">Ảnh đại diện</label>
                                        <div class="col-md-5">
                                            <input type="file" id="ImageUpLoad" name="ImageUpLoad" />
                                        </div>
                                    </div>

                                    <div class="form-group">
                                        @Html.LabelFor(model => model.User.Role)
                                        <div class="col-md-5">
                                            @Html.DropDownListFor(model => model.User.Role, new SelectList(new[]
                                            {
                                                new { Value = "admin", Text = "Quản trị viên" },
                                                new { Value = "user", Text = "Người dùng" }
                                            }, "Value", "Text"), "-- Quyền --", new { @class = "form-control", required = "required", id = "roleDropdown" })
                                        </div>
                                    </div>

                                    <div class="form-group">
                                        @Html.LabelFor(model => model.User.Email)
                                        <div class="col-md-12">
                                            @Html.TextBoxFor(model => model.User.Email, new { @class = "form-control", required = "required" })
                                        </div>
                                    </div>

                                    <div class="form-group">
                                        @Html.LabelFor(model => model.User.DisplayName)
                                        <div class="col-md-12">
                                            @Html.TextBoxFor(model => model.User.DisplayName, new { @class = "form-control", required = "required" })
                                        </div>
                                    </div>

                                    <div class="modal-footer">
                                        <button type="button" class="btn btn-secondary" data-dismiss="modal">Hủy bỏ</button>
                                        <input type="submit" value="Sửa" class="btn btn-success">
                                    </div>
                                </div>
                            </div>
                        </div>
                    </div>
                }

                <div class="modal fade" tabindex="-1" id="deleteUserModal" role="dialog">
                    <div class="modal-dialog" role="document" style="max-width: 600px">
                        <div class="modal-content">
                            <div class="modal-header">
                                <h5 class="modal-title">Xóa</h5>
                                <button type="button" class="close" data-dismiss="modal" aria-label="Close">
                                    <span aria-hidden="true">&times;</span>
                                </button>
                            </div>
                            <div class="modal-body">
                                <p>Bạn có muốn xóa người dùng này không?</p>
                                <p class="text-warning"><small>Hành động này không được hoàn tác</small></p>
                            </div>
                            <div class="modal-footer">
                                <button type="button" class="btn btn-secondary" data-dismiss="modal">Hủy bỏ</button>
                                <form id="deleteForm" action="@Url.Action("Delete", "User")" method="post" enctype="multipart/form-data" style="padding-top: 15px">
                                    @Html.AntiForgeryToken()
                                    <input type="hidden" name="id" id="deleteId" value="" />
                                    <button type="submit" class="btn btn-success">Xóa</button>
                                </form>
                            </div>
                        </div>
                    </div>
                </div>
            </div>
        </div>
    </div>
</div>

@section DoanJS
{
    <script>
        $(document).ready(function () {
            $('.edit').click(function () {
                var userId = $(this).data('id');
                var email = $(this).data('email');
                var displayname = $(this).data('displayname');
                var avatar = $(this).data('avatar');
                var role = $(this).data('role');

                $('#updateUserModal #User_Id').val(userId);
                $('#updateUserModal #User_Avatar').val(avatar);
                $('#updateUserModal #User_Email').val(email);
                $('#updateUserModal #User_DisplayName').val(displayname);
                $('#updateUserModal #roleDropdown').val(role);
            });
        });

        $('#updateUserModal').on('show.bs.modal', function (event) {
            var button = $(event.relatedTarget);
            var roleValue = button.data('role');

            $('#roleDropdown').val(roleValue);
        });

        $('#roleDropdown').on('change', function () {
            var selectedValue = $(this).val();
            $('#User_Role').val(selectedValue);
        });

        $('.delete').click(function () {
            var userId = $(this).data('id');
            $('#deleteId').val(userId);
        });
    </script>
}
